// UNCLASSIFIED
// Provides swag model library given ver=modelversion parameter.
// See the /skin.view skinning guide and the /icd.view API documentation.

extends layout
append layoutparms
	- Layout = "Model"
	- Start = query.start || "SIM"
append layoutarea

	case query.ver || "v1"
		when "ThreadedSWAG"
			- sectors = 4
			- features = 2
			- metrics = 3
			#SIM.DPF(inputs="NITF.file",outputs="act.C")
				#A.WARN(inputs="NITF.SIM",outputs="jpg.#{sectors}")
				#SWAG.TRK(inputs="jpg.A",outputs="det.#{features}")
				#C.ABI(inputs="det.SWAG",outputs="act.#{metrics}")
				
		when "v0"
			#SIM(inputs="test",outputs="Land|Warn,Water|Warn")
				#hack|Warn(inputs="Image|SIM|test",outputs="Land,Water")
				//
					#SIM(inputs="test",outputs="pad|Track,tel|Track,ship|Sea")
						#hack.Warn(inputs="Image|SIM|test",outputs="land|4,sea|2,lake|5")
						#haar.Track(inputs="land|Warn",outputs="pad|2,tel|3")
						#haar.Sea(inputs="sea|Warn",outputs="iceberg|4,ship|4,sub|2")
						#C.ABI(inputs="det|SWAG",outputs="act")
				
		when "v1"
			#SIM(inputs="$STEP",outputs="S3||PY2")
				#PY1(inputs="S1||SIM|$STEP",outputs="S2")
				#PY2(inputs="S2||PY1",outputs="S3")

		when "v1.1"
			#SIM(inputs="$TEST",outputs="Land||Warn1,Water||Warn1")
				#hack.Warn1(inputs="Chip||SIM|$TEST",outputs="Land,Water")
				#hack.Warn2(inputs="Chip||SIM|$TEST",outputs="Lake,Urban,Forest")

		when "v2"
			#SIM(inputs="$TEST|1",outputs="Land|9|Warn,Water|1|Warn")
				#hack.Warn(inputs="Chip|1|SIM|$TEST",outputs="Land|9,Water|1")

		when "v3"
			#SIM(inputs="$TEST|1",outputs="helipads|4|Detect,faces|9|Detect")
				#haar.Detect(inputs="frame|1|SIM|$TEST",outputs="helipads|4,faces|9")

		when "v4"
			#SIM(inputs="$TEST|1",outputs="helipads|4|Detect,faces|1|Detect")
				#hack.Warn(inputs="Chip|1|SIM|$TEST",outputs="Land|9,Water|1")
				#haar.Detect(inputs="frame|9|Warn|Land",outputs="helipads|4,faces|1")

		when "v5"
			#SIM(inputs="$TEST|1",outputs="tracks|4|Change Detect,tarps|8|Change Detect,tels|4|Feature Detect,tarps|8|Mux Tarps")
				#jpgsrv.JPG.Service(inputs="dpf|1|SIM|$TEST",outputs="jpg|1")
				#hack.Image.Index(inputs="Chip|1|JPG Service|jpg",outputs="Land|9,Water|1,Urban|1,City|1")
				#haar.Feature.Detect(inputs="frame|9|Image Index|Land",outputs="helipads|4,faces|1,tarp1|4,tarp2|4,tels|4")
				#abi.Change.Detect(inputs="obj|4|Feature Detect|helipads",outputs="tracks|4")
				#mux.Mux.Tarps(inputs="tarp1|4|Feature Detect,tarp2|4",outputs="tarps|8")

		when "v7"
			#SIM(inputs="$TEST|1",outputs="tracks|4|Change Detect")
				#jpgsrv.JPG.Service(inputs="dpf|1|SIM|$TEST",outputs="jpg|1")
				#hack.Image.Index(inputs="Chip|1|JPG Service|jpg",outputs="Land|9")
				#haar.Feature.Detect(inputs="frame|9|Image Index|Land",outputs="helipads|4")
				#abi.Change.Detect(inputs="obj|4|Feature Detect|helipads",outputs="tracks|4")

		when "v6"
			#SIM(inputs="$TEST|1",outputs="Land|9|Image Index")
				#jpgsrv.JPG.Service(inputs="dpf|1|SIM|$TEST",outputs="jpg|1")
				#hack.Image.Index(inputs="Chip|1|JPG Service|jpg",outputs="Land|9")
		
// UNCLASSIFIED
