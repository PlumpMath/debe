//- UNCLASSIFIED
//-
	Provides a common layout view given parameters:
		Layout = required resource = [Typeset, Chart, Brief, Mobile, Model, Voxel, Scene, Three, Grid, Guide]		
		Features = required features = {f1:1, f2:1, ... }
		Start = name of starting div.
	
block layoutparms
	- Start = ""
	- Layout = "Grid"
	- Feature = {Theme:0,Vide:0,Mathjax:0,W2UI:0,elFinder:0,DataTable:0,jqGrid:0,Isotope:0,Password:0,Game:""}

html(lang="en")
	head

		meta(http-equiv="Content-Type",content="text/html; charset=EUC-JP;")

		title #{source}
		noscript
			p Please enable Javascript and Cookies to access #{title}.

		case Layout
			when "Linux"
				style.
					.term {
						font-family: courier,fixed,swiss,monospace,sans-serif;
						font-size: 14px;
						color: #f0f0f0;
						background: #000000;
					}
					.termReverse {
						color: #000000;
						background: #00ff00;
					}
					#note {
						font-size: 12px;
					}
					#copyright {
						font-size: 10px;
					}
					#clipboard {
						font-size: 12px;
					}

			when "Typeset"
				style.
					h1 {text-align:center}
					h2 {font-weight: bold;
						background-color: #DDDDDD;
						padding: .2em .5em;
						margin-top: 1.5em;
						border-top: 3px solid #666666;
						border-bottom: 2px solid #999999; }

			when "Chart"
				script(src="clients/d3/d3.min.js")

			when "Brief"
				link(rel='stylesheet',href='clients/reveal/css/reveal.min.css')
				link(rel='stylesheet',href='clients/reveal/css/theme/default.css')
				//-link(rel='stylesheet',href='clients/reveal/css/print.css',type='text/css',media='print')
				//-link(rel='stylesheet',href='clients/reveal/lib/css/zenburn.css')

			when "Mobile"
				//- pending

			when "Model"
				link(rel="stylesheet",href="clients/joint/joint.css")

				style.
					.actionTrigger {
						transition: opacity 0.5s;
						opacity: 0;
					}
					.actionTrigger:hover {
						transition: opacity 0.3s;
						opacity: 0.3;
					}
					input.ui-icon-run {
						width:18px;
						height:18px;
						background:url(#{icons}/actions/run.png);
					}
					input.ui-icon-open {
						width:18px;
						height:18px;
						background:url(#{icons}/actions/open.png);
					}
					input.ui-icon-save {
						width:18px;
						height:18px;
						background:url(#{icons}/actions/save.png);
					}
					input.ui-icon-load {
						width:18px;
						height:18px;
						background:url(#{icons}/actions/load.png);
					}
					input.ui-icon-clone {
						width:18px;
						height:18px;
						background:url(#{icons}/actions/clone.png);
					}
					input.ui-icon-delete {
						width:18px;
						height:18px;
						background:url(#{icons}/actions/delete.png);
					}
					input.ui-icon-select {
						width:18px;
						height:18px;
						background:url(#{icons}/actions/select.png);
					}
					input.ui-icon-info {
						width:18px;
						height:18px;
						background:url(#{icons}/actions/info.png);
					}
					input.ui-icon-reset {
						width:18px;
						height:18px;
						background:url(#{icons}/actions/reset.png);
					}

					table.x {
						border: 1px solid black;
						//-table-layout: fixed;
						width: 200px;
					}
					th.x, td.x {
						border: 1px solid black;
						overflow: hidden;
						font-size: 12px;
						width: 50px;
						min-width: 50px;
						max-width: 50px;
						line-height: 0px;
					}

					#progressBar {
						width: 400px;
						height: 20px;
						border: 1px solid #111;
						background-color: #292929;
					}

					#progressBar div {
						height: 100%;
						color: #fff;
						text-align: right;
						line-height: 20px; /* same as #progressBar height if we want text middle aligned */
						width: 0;
						background-color: #0099ff;
					}

			when "Voxel"
				link(rel="stylesheet",href="games/style.css")

			when "Scene"
				style.
					body {
						margin: 0;
						-moz-user-select: -moz-none;
						-khtml-user-select: none;
						-webkit-user-select: none;
					}

			when "Three"
				style.
					body {
						background:#777;
						padding:0;
						margin:0;
						font-weight: bold;
						overflow:hidden;
					}

					#info {
						position: absolute;
						top: 0px;
						width: 100%;
						color: #ffffff;
						padding: 5px;
						font-family:Monospace;
						font-size:13px;
						text-align:center;
						z-index:1000;
					}

					a {
						color: #ffffff;
					}

					#oldie a { color:#da0 }

			when "Carousel"

				link( rel="stylesheet", type="text/css", href="clients/extjs/resources/css/carousel.css" )

			when "Grid"

				// link(rel="stylesheet",type="text/css",href="clients/extjs/plugins/htmleditor/resources/css/ux-all.css")
				
				if Feature.Theme
					link(rel="stylesheet", type="text/css", href="clients/extjs/resources/css/#{Feature.Theme}.css")

				//- Styles for change tracking, grid layout, and action columns
				
				style.

					body {
						visibility: hidden;
					}
					code  {
						font-family: consolas, courier, monospace;
						font-size: 1em;
						line-height: 1.2em;
						white-space: pre;
						background-color: #ccf; /* any colour's okay */
						color: #000; /* likewise */
						border: 1px solid #666;
						-moz-border-radius: 0.5em;
						-webkit-border-radius: 0.5em;
						border-radius: 0.5em; /* just in case */
						padding: 1em;
						margin: 1.2em 1em;
						width: 100%;
						float: left;
					}
					
					//
						.x-menu-button {
							display: block;
							font-size: 1.1em;
							font-weight: bold;
							text-transform: uppercase;
							padding: 10px 15px;
							margin: 20px auto;
							color: #ccc;
							background-color: #555;
							background: -webkit-linear-gradient(#888, #555);
							background: linear-gradient(#888, #555);
							border: 0 none;
							border-radius: 3px;
							text-shadow: 0 -1px 0 #000;
							box-shadow: 0 1px 0 #666, 0 5px 0 #444, 0 6px 6px rgba(0,0,0,0.6);
							cursor: pointer;
							-webkit-transition: all 150ms ease;
							transition: all 150ms ease;
						}
					
					td.UserType  { color: black; }
					td.UserTypeM { color: red; }
					td.UserTypeU { color: blue; }
					td.UserTypeA { color: green; }
					td.UserTypeB { color: orange; }

					.x-combo-col { width: 150; }
					
					.x-grid-row .x-grid-cell-inner {
						white-space: nowrap;
					}
					.x-grid-row-over .x-grid-cell-inner {
						font-weight: bold;
						white-space: nowrap;
					}

					img.Action-0 {
						width:16px;
						height:16px;
						background:url(#{icons}/actions/actions.gif) -16px 0;
					}
					img.Action-1 {
						width:16px;
						height:16px;
						background:url(#{icons}/actions/actions.gif) 0px 0;
					}

			when "Applet"
				applet(id="app",code="applets/pkg.JavaApplication1.class")

				//
					script(language="javascript")
						//-alert("here we go");
						//-app.noArgMethod();
						//-app.someMethod("Hello");
						//-app.someMethod(5);
						//-var five = app.methodReturningInt();
						//-alert(five);
						//-var hello = app.methodReturningString();
						//-app.methodReturningObject().anotherMethod();

		//-
			The socketio interface is used to sync changes amoung all clients.  This interface is establihed 
			when the server does a require('socket.io'), thus creating a virtual route #{sockets} = 
			"/socket.io/socket.io.js" from which the client retrieves "socket.io.js" when it receives the 
			<script src="/socket.io/socket.io.js"> tag.  This socket.io.js then defines an io object
			to manage client connections.

		if sockets
			script(src="#{sockets}")
		else
			script.
				io = null;

		//- Base parser that clients interface with

		script(src="clients/base.js")

		case Layout
			when "Linux"
				table(border="0")
					tr(valign="top")
						td
							script(src="clients/jslinux/utils.js")
							script(src="clients/jslinux/term.js")
							script(src="clients/jslinux/cpux86.js")
							script(src="clients/jslinux/jslinux.js")
							script(src="clients/jslinux/cpux86-ta.js")
							div(id="copyright")
								| &copy; 2011 Fabrice Bellard - <a href="news.html">News</a> - <a href="faq.html">FAQ</a> - <a href="tech.html">Technical notes</a>
							
						td
							input(type="button",value="Clear clipboard",onclick="clear_clipboard();")
							br
							textarea(row="4",cols="16",id="text_clipboard")
		
			when "Brief"
				if Feature.Mathjax
					script(src="clients/mathjax/MathJax.js?config=default")

			when "Typeset"
				script(src="clients/mathjax/MathJax.js?config=default")

			when "Scene"
				script(src="clients/scenejs/scenejs.js")
				script.
					SceneJS.setConfigs({
						pluginPath:"clients/scenejs/plugins"
					});

			when "Three"
				script(src="clients/threejs/build/three.min.js")
				script(src="clients/threejs/examples/js/Detector.js")
				script(src="clients/threejs/examples/js/libs/stats.min.js")

			when "Carousel"
				script(src="clients/extjs/ext-core.js")
				script(src="clients/extjs/plugins/Carousel.js")
				script.
					Ext.onReady( function () {
						new Ext.ux.Carousel('content', {
							itemSelector: 'img',
							interval: 4,
							autoPlay: true,
							showPlayButton: true,
							transitionDuration: 2,
							width: 600,
							height: 400,
							pauseOnNavigate: true,
							freezeOnHover: false,
							transitionType: 'fade',
							navigationOnHover: true
						});
					});

			when "Grid"
				script(src="clients/extjs/include-ext.js")
				script(src="clients/extjs/ext-all.js")
				script.
					Ext.Loader.setConfig({enabled: true});
					Ext.Loader.setPath('Ext.ux', 'clients/extjs/plugins');
				script(src="clients/grids.js")

				// Hydra css links here

			when "Guide"
				//- jQuery guts
				//-link(href='clients/jQuery/css/default.css',rel='stylesheet')
				script(src='clients/jQuery/js/jquery-1.11.0.min.js')

				//- jQuery UI defaults
				link(href='clients/jQuery/ui/css/smoothness/jquery-ui.css',rel='stylesheet')
				script(src='clients/jQuery/ui/jquery-ui-1.10.3.custom.min.js')

				//- jQuery Features
				each val, idx in Feature
					if val
						case idx
							when "W2UI"
								link(href='clients/w2ui/w2ui-1.4.css',rel='stylesheet')
								script(src='clients/w2ui/w2ui-1.4.js')

							when "elFinder"
								link(type="text/css",rel="stylesheet",media="screen",href="clients/jQuery/plugins/elfinder/css/elfinder.min.css")
								link(type="text/css",rel="stylesheet",media="screen",href="clients/jQuery/plugins/elfinder/css/theme.css")
								script(src="clients/jQuery/plugins/elfinder/js/elfinder.full.js")

								//- uncomment to debug elFinder
									link(href='clients/jQuery/ui/css/smoothness/jquery-ui.css',rel='stylesheet')
									script(src='clients/jQuery/js/jquery-1.8.0.min.js')
									script(src='clients/jQuery/ui/jquery-ui-1.8.23.custom.min.js')

							when "Isotope"
								script(src="clients/jQuery/plugins/isotope.pkgd.min.js")
								script(src="clients/jQuery/plugins/imagesloaded.pkgd.min.js")
								script(src="clients/jQuery/plugins/packery-mode.pkgd.min.js")
								
								style.
									* {
										-webkit-box-sizing: border-box;
										-moz-box-sizing: border-box;
										box-sizing: border-box;
									}

									body {
										font-family: sans-serif;
									}

									.button {
										display: inline-block;
										padding: 0.5em 1.0em;
										background: #EEE;
										border: none;
										border-radius: 7px;
										background-image: linear-gradient( to bottom, hsla(0, 0%, 0%, 0), hsla(0, 0%, 0%, 0.2) );
										color: #222;
										font-family: sans-serif;
										font-size: 16px;
										text-shadow: 0 1px white;
										cursor: pointer;
									}

									.button:hover {
										background-color: #8CF;
										text-shadow: 0 1px hsla(0, 0%, 100%, 0.5);
										color: #222;
									}

									.button:active,
										.button.is-checked {
										background-color: #28F;
									}

									.button.is-checked {
										color: white;
										text-shadow: 0 -1px hsla(0, 0%, 0%, 0.8);
									}

									.button:active {
										box-shadow: inset 0 1px 10px hsla(0, 0%, 0%, 0.8);
									}

									.button-group:after {
										content: '';
										display: block;
										clear: both;
									}

									.button-group .button {
										float: left;
										border-radius: 0;
										margin-left: 0;
										margin-right: 1px;
									}

									.button-group .button:first-child { border-radius: 0.5em 0 0 0.5em; }
									.button-group .button:last-child { border-radius: 0 0.5em 0.5em 0; }

									.isotope {
										border: 1px solid #333;
										max-width: 1200px;
									}

									.isotope:after {
										content: '';
										display: block;
										clear: both;
									}

									.element {
										position: relative;
										float: left;
										width: 100px;
										height: 100px;
										margin: 5px;
										padding: 10px;
										background: #888;
										color: #262524;
									}

									.element > * {
										margin: 0;
										padding: 0;
									}

									.element .name {
										position: absolute;
										left: 10px;
										top: 60px;
										text-transform: none;
										letter-spacing: 0;
										font-size: 12px;
										font-weight: normal;
									}

									.element .symbol {
										position: absolute;
										left: 10px;
										top: 0px;
										font-size: 42px;
										font-weight: bold;
										color: white;
									}

									.element .number {
										position: absolute;
										right: 8px;
										top: 5px;
									}

									.element .weight {
										position: absolute;
										left: 10px;
										top: 76px;
										font-size: 12px;
									}

									.element.width1 { width: 100px; }
									.element.height1 { height: 100px; }
									.element.width2 { width: 200px; }
									.element.height2 { height: 200px; }
									.element.width3 { width: 300px; }
									.element.height3 { height: 300px; }
									.element.width4 { width: 400px; }
									.element.height4 { height: 400px; }

									.element.alkali          { background: #F00; background: hsl(   0, 100%, 50%); }
									.element.alkaline-earth  { background: #F80; background: hsl(  36, 100%, 50%); }
									.element.lanthanoid      { background: #FF0; background: hsl(  72, 100%, 50%); }
									.element.actinoid        { background: #0F0; background: hsl( 108, 100%, 50%); }
									.element.transition      { background: #0F8; background: hsl( 144, 100%, 50%); }
									.element.post-transition { background: #0FF; background: hsl( 180, 100%, 50%); }
									.element.metalloid       { background: #08F; background: hsl( 216, 100%, 50%); }
									.element.diatomic        { background: #00F; background: hsl( 252, 100%, 50%); }
									.element.halogen         { background: #F0F; background: hsl( 288, 100%, 50%); }
									.element.noble-gas       { background: #F08; background: hsl( 324, 100%, 50%); }

									.table-like {
										list-style: none;
										margin: 0;
										padding: 0;
									}

									.table-like > li {
										width: 100%;
										clear: both;
										border-top: 1px solid;
									}

									.table-like > li:after {
										display: block;
										content: '';
										clear: both;
									}

									.table-like > li > * {
										float: left;
										padding: 4px 4px;
									}

									.table-like .name { width: 30%; }
									.table-like .symbol { width: 10%; }
									.table-like .weight { width: 15%; }
									.table-like .number { width: 10%; }
									.table-like .category { width: 20%; }


							when "DataTable"
								style.
									@import "clients/jQuery/plugins/DataTables/media/css/demo_page.css";
									@import "clients/jQuery/plugins/DataTables/media/css/demo_table.css";

								script(src="clients/jQuery/plugins/DataTables/media/js/jquery.dataTables.js")

							when "Theme"
								script(src='clients/jQuery/plugins/misc/themeswitchertool.js')

							when "jqGrid"
								link(type="text/css",rel="stylesheet",media="screen",href="clients/jQuery/jqGrid/css/ui.jqgrid.css")
								script(src="clients/jQuery/plugins/jqGrid/js/i18n/grid.locale-en.js")
								script(src="clients/jQuery/plugins/jqGrid/js/minified/jquery.jqGrid.min.js")

							when "Vide"
								script(src="clients/jQuery/plugins/vide/src/jquery.vide.js")

							when "Password"
								input#text(type="password")
								| Forceable in <span>less than one second</span>
								//- $("#text").pwdstr("$info");

							default
								link(type="text/css",rel="stylesheet",href="clients/jQuery/plugins/apy/#{idx}/menu.css")
								script(src="clients/jQuery/plugins/apy/#{idx}/jquery.js")
								script(src="clients/jQuery/plugins/apy/#{idx}/menu.js")
								a(href="http://-apycom.com/")

				//- guides base parser
				script(src='clients/guides.js')

			when "Model"
				//- custom changes in .js require re-minification
				script(src="clients/joint/joint.min.js")
				script(src="clients/joint/joint.shapes.devs.js")
				script(src="clients/joint/joint.shapes.fsa.min.js")
				script(src="clients/joint/joint.shapes.pn.min.js")
				script(src="clients/joint/joint.shapes.erd.min.js")
				//-script(src='clients/jQuery/js/jquery-1.9.1.min.js')
				script(src='clients/jQuery/ui/jquery-ui-1.10.3.custom.min.js')
				//-script(src='clients/jQuery/plugins/misc/jquery.ui.tooltip.min.js')

				//- models base parser
				script(src="clients/models.js")
										
	body

		case Layout
			when "Brief"
				//- script(src='clients/reveal/plugin/highlight/highlight.js')
				script(src='clients/reveal/lib/js/head.min.js')
				script(src='clients/reveal/js/reveal.min.js')

			when "Voxel"
				#container
				#crosshair
				#battery
				nav#tools.bar-tab
					ul.tab-inner
						li(class="tab-item active")
							.tab-label
								| grass
						li.tab-item
							.tab-label
								| dirt
						li.tab-item
							.tab-label
								| obsidian
						li.tab-item
							.tab-label
								| plank
						li.tab-item
							.tab-label
								| dude

			when "Scene"
				//- tbd

			when "Model"
				//- define toolbox and wrapper tool

				table
					th: p .......
					th: input#run.ui-icon-run(type="button",size=4,title="step or pause simulation")
					th: input#open.ui-icon-open(type="button",size=4,title="open selected system")
					th: input#save.ui-icon-save(type="button",size=4,title="save model")
					th: input#load.ui-icon-load(type="button",size=4,title="load model")
					th: input#clone.ui-icon-clone(type="button",size=4,title="clone selected system")
					th: input#delete.ui-icon-delete(type="button",size=4,title="delete selected system")
					th: input#select.ui-icon-select(type="button",size=4,title="select system")
					th: input#info.ui-icon-info(type="button",size=4,title="info about selected system")
					th: input#reset.ui-icon-reset(type="button",size=4,title="stop and reset simulation")
					th.x: #status status
					th.x: #state state
					th.x: #step step
					th.x: #tokens tokens
					th.x: #jobs jobs
					th.x: #msg msg
					th.x: #db LFS
					th: #progressBar
						#res

				//
					#wrapper(style="left:0px;top:0px;position:absolute;width:50px;height:50px;")

				//- for debugging wrapper
					svg#Experimental(xmlns="http://www.w3.org/2000/svg",version="1.1",style="width:150px;height:150px;position:absolute;")
						ellipse(cx="50%",cy="50%",rx="50%",ry="50%",stroke="#FF0000",stroke-width="2",fill="#800000")
						ellipse(cx="50%",cy="50%",rx="10%",ry="10%",stroke="#FF0000",stroke-width="2",fill="#880000")
		
		//- Mark base.js content

		#content(guard="#{guard}",icons="#{icons}",start="#{Start}",query="#{JSON.stringify(query)}")
	
			block layoutarea
		
		//- Layout scripts to run on dom ready
		
		case Layout
			when "Voxel"
				script(src="games/#{Feature.Game}/bundle.js")

			when "Linux"
				body(onload="start()")

			when "Brief"
				script(src='clients/briefs.js')

			when "Typeset"
				script.
					MathJax.Hub.Config({
						extensions: ["tex2jax.js"],
						jax: ["input/TeX","output/HTML-CSS"],
						tex2jax: {inlineMath: [["$","$"],["\\(","\\)"]]}
					});
					MathJax.Hub.Queue(["Typeset",MathJax.Hub]);

//- UNCLASSIFIED
