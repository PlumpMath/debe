//- UNCLASSIFIED

extends site
append siteparms
	- view = query.ex || "Example Site"
	- parms = {spoof: "ex=spoof", workflows:"ex=workflows",enginedb:"ex=enginedb",embedweb:"ex=embedweb", odbc:"ex=odbc", immersion:"ex=immersion", grids:"ex=grids", guides:"ex=guides", typesets:"ex=typesets", brief:"ex=briefs", visuals:"ex=visuals"}
	- help = "Provides example sites via &ex = example or the Options."
append sitearea

	- thehost = "http://200.100.50.101"
	
	case query.ex
		when "spoof"
			#post.ExSpoof(path="/",dims="[750,500]")

		when "odbc"
			#grid.Excel(path="/test.db",cols="a,b,c,d")
			#grid.ViaAccess(path="/linktest.db",cols="a,b,c,d,e")
			#grid.WebSite(path="/somesite.db",cols="x1,x2,x3,x4")
			#grid.Proxies(path="/proxies.db",actions,
				cols="Enabled.c,Name,File(Path,Sheet),Period.n,Special.x,Updates.i,Updated.d,Machine(Vars.x,Classif,Engine,Code.x)")

		when "embedweb"
			#post.ExWeb(path="http://hydra.ilabs.ic.gov",dims="[750,500]")

		when "enginedb"
			#form.JS.A.engine(path="engines.db?name=A&engine=js",cols="Name,Engine,Enabled.c,Vars.x,Code.x",actions)
			#grid.JS.A(path="A.db",cols="x,y,z")
			
			#form.JS.regress.engine(path="engines.db?name=regress&engine=js",cols="Name,Engine,Enabled.c,Vars.x,Code.x",actions)
			#grid.JS.regress.collect(
				path="/Htest.db",
				dims="#{dims}",page="#{page}",help,kiss,actions,check,refresh,
				cols="Used.c,Name,Parameters(p0.n,p1.n,p2.n,p3.n,p4.n,p5.n),Observations(FPR.n,TPR.n)")
			#grid.JS.regress.output(
				path="/Hreg.db",
				dims="#{dims}",page="#{page}",help,kiss,actions,check,refresh,
				cols="Name,Computed.d,Tests.n,Fits(a0.n,a1.n,a2.n,a3.n,a4.n,a5.n)")

			#form.Python.test.engine(path="engines.db?name=pyreg&engine=python",cols="Name,Engine,Enabled.c,Vars.x,Code.x",actions)
			#grid.Python.test(path="pyreg.db",cols="x,y,z")

		when "immersion"
			#folder.Gaming(dock="left")
				#post.Earth(path="#{thehost}:8083/Apps/HelloWorld.html",dims="[750,500]")
				#game.Blast(path="/",dims="#{dims}")
				#spherebounce.Bounce(path="/",dims="#{dims}")
				#anaglyph.Anagylph(path="/",dims="#{dims}")
				#voxelpaint.Build(path="/",dims="#{dims}")

		when "grids"
			#welcome.News(path="&splash=1",dims="[750,500]")
			#pivot.Find(
				path="/intake.db",
				page=50,dims="#{dims}",typical,
				pivots="App,Name,Tech",
				cols="Condition(TRL,Track,Reason),General(Special,HWConfig,SWConfig,Parms),Data Collect Requirements(Reqts(C*),iName,iClassif,iSpec),Host Env Requirements(Reqts(H*),oName,oClassif,oSpec),Dissem Requirements(M*)")

			#grid.List(
				path="/intake.db",
				page=50,dims="#{dims}",typical,
				sorts="App,Name",
				cols="Name,App,Tech,TRL,Track,General(Special,HWConfig,SWConfig,Parms),Data Collect Requirements(Reqts(C*),iName,iClassif,iSpec),Host Env Requirements(Reqts(H*),oName,oClassif,oSpec),Dissem Requirements(M*)",
				links="Name.Find.Name")

			#form.Edit(
				path="/intake.db",
				links="ID.List.ID",
				actions,dims="#{dims}",typical,
				cols="Name,App,Tech,TRL,Track,General(Special,HWConfig,SWConfig,Parms),Data Collect Requirements(Reqts(C*),iName,iClassif,iSpec),Host Env Requirements(Reqts(H*),oName,oClassif,oSpec),Dissem Requirements(M*)")

		when "guides"
			#exguides.Guide(path="/",dims="#{dims}")

		when "typesets"
			#extypesets.Paper(path="/",dims="#{dims}")

		when "mobiles"
			p Pending

		when "briefs"
			#tutorial.Brief(path="/",dims="#{dims}")

		when "workflows"
			#post.NodeRed(path="#{thehost}:8082",dims="[750,500]")
			#post.HyperT(path="#{thehost}:8081/workflow.view",dims="[750,500]")

		when "visuals"
			#pivot.Browser(
				path="/intake.db",
				page=10,dims="#{dims}",
				pivots="App,Name,Tech",
				cols="App,TRL,Tech")
			#force.F(
				path="/intake.db",
				dims="#{dims}",
				links="Browser")
			#cluster.C(
				path="/intake.db",
				dims="#{dims}",
				links="Browser")
			#treefan.T(
				path="/intake.db",
				dims="#{dims}",
				links="Browser")
			#sankey.S(
				path="/energy.json.data",
				dims="#{dims}",
				links="Browser")
			#omg.O(
				path="/intake.db",
				dims="#{dims}",
				links="Browser")
			#treemap.M(
				path="/intake.db",
				dims="#{dims}",
				links="Browser")
			#cpack.P(
				path="/intake.db",
				dims="#{dims}",
				links="Browser")
			#chords.H(
				path="/bank.db",
				dims="#{dims}",
				links="Browser")

//- UNCLASSIFIED
