//- UNCLASSIFIED
//-
	Extends the extjs framework to provide a standard site skinning framework with parameters:

		parms = {option1: menu1, option2: menu2, ...} dropdown skinning options 
		dock = [left | right | top | bottom] folder docking style 
		dims = width,height maximum widget dimensions 
		view = [Home | Kiss | Engr | Min | Basic | Nada, ...] site style
		page = maximum grid rows
		goto = tab to activate
		pulse = system health refresh rate (in seconds)

extends base
append base_parms
	- tech = "extjs"
append layout_parms
	- banner = banner
	- start = query.ver ? "SIM" : ""
	- capture = true
append base_head

	block site_parms
		- parms = {}
		- dock = "top"
		- dims = "2048,1200"
		- view = "Min"
		- page = 50
		- pulse = 60

	style.
		.AL {text-align:left;}
		.AR {text-align:right;}
		.AC {text-align:center;}
		.LG {font-size:15px;}
		.SM {font-size:10px;}
		.IN {text-indent:50px;}
		.BY {background-color:yellow;}

append base_body

	#hold.Options(path=JSON.stringify(parms),cols="Name,option")
	#hold.Users(path="/USERS.db",cols="Name")
	#hold.Links(path="/LINKS.db?area="+area,cols="Name")
	#hold.Health(path="/HEALTH.db",cols="Name")
	#hold.AOIs(path="/aois.db",cols="path,label,row,rows,col,cols")
	#hold.Queues(path="/QUEUES.db",cols="Name")
	#hold.Engines(path="/ENGINES.db",cols="Name")
	#hold.Cliques(path="/CLIQUES.db",cols="Name")
	#hold.Themes(path="/lookups.db",cols="Name,Path")
	#hold.Joins(path="/lookups.db",cols="Name,Path")
	#hold.Locales(path="/lookups.db",cols="Name,Path")
	#hold.Datasets(path="/lookups.db",cols="Name,Path")
	#hold.Views(path="/VIEWS.db",cols="Name,class")
	#hold.Uploads(path="/uploads.db",cols="Name")
	#hold.Stores(path="/stores.db",cols="Name")
	#hold.History(path="/history.db?pivot=all",cols="Moderators,Idx",sync="Idx")
	#hold.Parms(path="/parms.db",cols="Parm,Type,Label,Special",sync="Parm")
	#hold.Summary(path="/SUMMARY.db",refresh=pulse,cols="Name")

	//
		#hold.Positives(path="/positives.FILES.db",cols="Name")
		#hold.Negatives(path="/negatives.FILES.db",cols="Name")

	- titlebar = [table.hyper(":project"), client.hyper("/home.view?option=chat"), ("QoS"+profile.QoS).hyper(":profile"), "Issues".hyper(), "Baseline".hyper("git.exe"), "Moderate".hyper()].join(" || ")
	- goto = query.goto || ""
	
	case view
		when "Min"

			#border(
				head="Prefs(Locales,Themes),Files(View,Uploads,$uploads,Stores,$stores),Options,Edit,LikeUs,Help",
				LikeUs="/likeus.db",
				View="/files.view",
				title=titlebar,
				Edit="/edit.view?name="+table)

				block site_help

					:markdown
						*	Options for this view.
						*	Links to other views.
						*	Themes preferred.  
						*	Likeus for better QoS.
						*	Capture screen for administrator.
						*	Edit this [view](skinguide.view).

				#folder(center,dock=dock,active=goto)

					block site_body

				#fit(south,crush)
					:markdown
						Built on [#{nick}](/home_brief.view) [API](/api.view) [Skinning Guide](/skinguide.view) [PRM](/shares/doc/debe/index.html) [blog](tbd) [JIRA](tbd) By:#{credits}

		when "Basic"

			#border(
				title=titlebar,
				head="Themes,Options,Edit,Help",dims=dims,
				Edit="/edit.view?name="+table)

				p #{classif.level} #{classif.purpose}

				block site_help

					:markdown
						*	Options for this view.
						*	Links to other views.
						*	Themes preferred.  
						*	Likeus for better QoS.
						*	Capture screen for administrator.
						*	Edit this [view](skinguide.view).

				block site_body
				
				#fit(south,crush)
					:markdown
						Built on [#{nick}](/home_brief.view) [API](/api.view) [Skinning Guide](/skinguide.view) [PRM](/shares/doc/debe/index.html) [blog](tbd) [JIRA](tbd) By:#{credits}

		when "Home"

			#border(
				title=titlebar,
				head="Health,Users,Themes,Capture,Links,Options,Edit,Likeus,Help",
				LikeUs="/likeus.db",
				crush,
				dims=dims,
				Edit="/edit.view?name="+table)

				p #{classif.level} #{classif.purpose}

				block site_help

					:markdown
						*	Options for this view.
						*	Links to other views.
						*	Themes preferred.  
						*	Likeus for better QoS.
						*	Capture screen for administrator.
						*	Edit this [view](skinguide.view).

				#fit(center)
					block site_body
					
				#fit(south,crush)
					:markdown
						Built on [#{nick}](/home_brief.view) [API](/api.view) [Skinning Guide](/skinguide.view) [PRM](/shares/doc/debe/index.html) [blog](tbd) [JIRA](tbd) By:#{credits}

		when "Kiss"

			#folder(dock=dock,active=goto)
				block site_help
				block site_body

		when "Monster"

			#border(
				title=titlebar,
				head="More(Health,Users,Links,Themes),Engines,Queues,Cliques,Uploads,$uploads,Stores,$stores,Views,Options,Edit,LikeUs,Help",
				LikeUs="/likeus.db",dims=dims,
				Edit="/edit.view?name="+table)

				p #{classif.level} #{classif.purpose}

				bock site_help

					:markdown
						*	Options for this view.
						*	Links to other views.
						*	Themes preferred.  
						*	Likeus for better QoS.
						*	Capture screen for administrator.
						*	Edit this [view](skinguide.view).
						*	Health of system.
						*	Users connected.
						*	Engines [Python,JS,R,Ex,Matlab,etc](/engine.view) status.
						*	Queues status.
						*	Cliques formed on database.
						*	Uploads of files to NLP indexing engines.
						*	Stores of files for [workflows](/workflow.view).

				#pivot.Helpful.Links(
					west,crush,dims="[200,600]",
					path="/sidebars.db",cols="Pivot(NodeID,Topic),Special")

				#folder(center,dock=dock,active=goto)
					block site_body

				#fit(south,crush)
					- browsers = {Ok: ["supported","Chrome","Firefox","Opera","Safari"],Bad: ["unsupported","IE","Netscape","Traveler","TheWorld","Maxthon"] }

					ishtml
						each brow in browsers.Ok
							img(src=icons+"/browsers/"+brow+".ico",width=16,height=16)

						each brow in browsers.Bad
							img(src=icons+"/browsers/"+brow+".ico",width=16,height=16)

					:markdown
						Built on [#{nick}](/home_brief.view) [API](/api.view) [Skinning Guide](/skinguide.view) [PRM](/shares/doc/debe/index.html) [blog](tbd) [JIRA](tbd) By:#{credits}

		when "Search"

			#hold.Comfort(path="/lookups.db",cols="Name,Path")

			#border(
				crush,
				head="Comfort,Prefs(Locales,Themes),Files(View,Uploads,$uploads,Stores,$stores),Options,Edit,Likeus,Help",
				LikeUs="/likeus.db",
				View="/files.view",
				title=titlebar,
				Edit="/edit.view?name="+table)
				
				block site_help

				#grid.Search(
					path="/catalog.db",center,crush,
					head="Search,Execute,Print,Refresh",
					page=100,dims=dims,
					cols="Ref,Name,Link.h,Dated.d,Quality")

				#fit(south,crush)
					:markdown
						Built on [#{nick}](/home_brief.view) [API](/api.view) [Skinning Guide](/skinguide.view) [PRM](/shares/doc/debe/index.html) [blog](tbd) [JIRA](tbd) By:#{credits}

		default

			#border(
				title=titlebar,
				head="System(Health,Users,Links,Engines,Queues,Cliques),Prefs(Locales,Themes),Files(View,Uploads,$uploads,Stores,$stores),Options,Edit,LikeUs,Capture,Help",
				LikeUs="/likeus.db",
				View="/files.view",
				Edit="/edit.view?name="+table)

				p #{classif.level} #{classif.purpose}

				block site_help

					:markdown
						*	Options for this view.
						*	Links to other views.
						*	Themes preferred.  
						*	Likeus for better QoS.
						*	Capture screen for administrator.
						*	Edit this [view](skinguide.view).
						*	Health of system.
						*	Users connected.
						*	Engines [Python,JS,R,Ex,Matlab,etc](/engine.view) status.
						*	Queues status.
						*	Cliques formed on database.
						*	Uploads of files to NLP indexing engines.
						*	Stores of files for [workflows](/workflow.view).

				#folder(center,dock=dock,active=goto)
					block site_body

				#fit(south,crush)
					:markdown
						Built on [#{nick}](/home_brief.view) [API](/api.view) [Skinning Guide](/skinguide.view) [PRM](/shares/doc/debe/index.html) [blog](tbd) [JIRA](tbd) By:#{credits}

//- UNCLASSIFIED
