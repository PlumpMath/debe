//- UNCLASSIFIED

extends site
append site_help
	:markdown
		Provides a &view to the model library &lib [exlib,swaglib,...] at version &ver.

append site_parms
	- parms = { Threaded:"Threaded",PetriNet:"PetriNet",StateMachine1:"StateMachine1",StateMachine2:"StateMachine2",Python2:"Python2",Python1:"Python1",test5:"test5",test4:"test4",test3:"test3",test2:"test2",test1:"test1",test6:"test6",test7:"test7",test8:"test8",test9:"test9",test10:"test10" }
	- view = query.view || "Min"

append site_body

	:markdown
		Consult the [api](/api.view?goto=Engines) and the [skinguide](/skinguide?goto=Workflows) 
		for help on how to create engines and use them in workflows.

	- src = query.option || query.src || "Python1"

	#nodetau.Model(path="#{src}",dims="#{dims}")

		:markdown
			Consult the [api](/api.view?goto=Engines) and the [skinguide](/skinguide?goto=Workflows) 
			for help on how to create engines and use them in workflows.

	#grid.Stats(
		path="/simstats.db",
		page=25,refresh,
		cols="t.date,name,step.n,user,tokens,state,delay")

	#grid.SimOptions(
		path="/simoptions.db",
		page=25,
		cols="name,steps.n,t.n,delta.n,snappath,snapperiod.n,screen.x,url")

	#grid.Apps(
		path="/apps.db",
		page=25,
		cols="Name.t,Nick.t,Title.t,DB.t,Cores.n,Sockets.c,Domain.t,PKI.c,Port.n")

	#grid.Cores(
		path="/simcores.db",
		page=25,
		cols="engine,timeout.n,type,client,name,thread.n,index.n")

	#grid.Engines(
		path="/engines.db",kiss,
		page=25,
		cols="Name,Vars.x,Engine,Code.x,Classif")
		
		:markdown
			Consult the [api](/api.view?goto=Engines) and the [skinguide](/skinguide?goto=Workflows) 
			for help on how to create engines and use them in workflows.
			
	#form.Engine(
		path="/engines.db",
		page=25,
		links="Name.Engines.Name",
		cols="Name,Vars.x,Engine,Code.x,Classif")

		:markdown
			Consult the [api](/api.view?goto=Engines) and the [skinguide](/skinguide?goto=Workflows) 
			for help on how to create engines and use them in workflows.

		
//- UNCLASSIFIED
